apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs'

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.god.seep.weather"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "0.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions ""
    }

    def prop = new Properties()
    def dis = project.rootProject.file('local.properties').newDataInputStream()
    prop.load(dis)
    def storePath = prop.getProperty('keystore.path')
    signingConfigs {
        release {
            storeFile file(storePath)
            storePassword prop.getProperty('keystore.password')
            keyAlias prop.getProperty('keystore.alias')
            keyPassword prop.getProperty('keystore.alias_password')
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false//是否去除无效的资源文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            zipAlignEnabled true
            minifyEnabled false
            shrinkResources false
            if (storePath)
                signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/aidl']
        }
    }

    /**
     * 多渠道包
     */
    productFlavors {
        pro {
            dimension ""
            buildConfigField "String", "environment", '"pro"'
        }
        dev {
            dimension ""
            buildConfigField "String", "environment", '"dev"'
        }
        vip {
            dimension ""
        }
        free {
            dimension ""
        }
    }

    //配置打包输出名称
    applicationVariants.all {
        variant ->
            variant.outputs.all {
                outputFileName = "Transfer_${defaultConfig.versionName}" +
                        "_${variant.productFlavors[0].name}_${buildType.name}.apk"
            }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation "com.google.android.material:material:$material_version"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation "io.reactivex.rxjava2:rxjava:2.2.7"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    implementation 'com.hwangjr.rxbus:rxbus:1.0.6'

    implementation "android.arch.navigation:navigation-fragment:$navi_version"
    // use -ktx for Kotlin
    implementation "android.arch.navigation:navigation-ui:$navi_version"
    //anko-commons
    //    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    // optional - Test helpers
    // this library depends on the Kotlin standard library
    //    androidTestImplementation "android.arch.navigation:navigation-testing:$navi_version"
    //    compile "org.jetbrains.kotlin:kotlin-reflect:1.2.60"
    implementation 'com.google.code.gson:gson:2.8.5'
}
